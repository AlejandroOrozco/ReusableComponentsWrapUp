//
//  SignUpInteractor.swift
//  ReusableComponentsWrapUp
//
//  Created by Alejandro Orozco Builes on 4/9/19.
//  Copyright (c) 2019 Alejandro Orozco Builes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignUpBusinessLogic
{
  func createSignUpForm()
}

protocol SignUpDataStore
{
  //var name: String { get set }
}

class SignUpInteractor: SignUpBusinessLogic, SignUpDataStore
{
  var presenter: SignUpPresentationLogic?
  var worker: SignUpWorker?

  enum SignUpForm { case name, lastName }
  private var formFields: [(key: SignUpForm, value: UIFormElement)] = [
    (key: .name, value: MyAppTextField(name: "Name" , placeholder: "Type here your name", value: nil, validates: true)),
    (key: .lastName, value: MyAppTextField(name: "LastName" , placeholder: "Type here your LastName", value: nil, validates: true))
  ]
  
  func createSignUpForm() {
    presenter?.presentSignUpForm(formFields: formFields.map { $0.value })
  }
}
